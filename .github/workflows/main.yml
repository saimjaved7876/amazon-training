name: Cypress Tests

on:
  push:
    branches:
      - master 

jobs:

  wireguard_example:
    runs-on: ubuntu-latest
    steps:
      run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn          

      -name: Setup VPN config
      run: |
          echo "${{ secrets.CA_CRT }}" > ca.crt
          echo "${{ secrets.USER_CRT }}" > user.crt
          echo "${{ secrets.USER_KEY }}" > user.key
          echo "${{ secrets.SECRET_USERNAME_PASSWORD }}" > secret.txt
          echo "${{ secrets.TLS_KEY }}" > tls.key          

      -name: Connect VPN
      run: sudo openvpn --config ".github/vpn/config.ovpn" --log "vpn.log" --daemon

      -name: Wait for a VPN connection
      timeout-minutes: 1
      run: until ping -c1 your-server-address; do sleep 2; done
        # OR
       run: until dig @your-dns-resolver your-server-address A +time=1; do sleep 2; done
      
  cypress-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14 # You can change the Node.js version as needed

      - name: Install dependencies
        run: npm install # Or use yarn if preferred

      - name: Checkout
        uses: actions/checkout@v3
      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved
      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: .github/workflows/client.ovpn
          username: ${{ secrets.OVPN_USERNAME }}
          password: ${{ secrets.OVPN_PASSWORD }}
          client_key: ${{ secrets.USER_KEY }}

      - name: Run Cypress tests
        run: npm run cy:run # Adjust the script name as per your package.json

      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress-results
          path: cypress/screenshots # Adjust to the location of your test results
          

      - name: Save screenshots and reports as artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots-reports
          path: cypress/screenshots # Adjust to the location of your screenshots and reports

      
      - name: Upload videos
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          path: cypress/videos
